
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	insb   (%dx),%es:(%rdi)
  400202:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400209:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  40020e:	78 2d                	js     40023d <_init-0x153>
  400210:	78 38                	js     40024a <_init-0x146>
  400212:	36                   	ss
  400213:	2d 36 34 2e 73       	sub    $0x732e3436,%eax
  400218:	6f                   	outsl  %ds:(%rsi),(%dx)
  400219:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    $0x0,%al
  40021e:	00 00                	add    %al,(%rax)
  400220:	10 00                	adc    %al,(%rax)
  400222:	00 00                	add    %al,(%rax)
  400224:	01 00                	add    %eax,(%rax)
  400226:	00 00                	add    %al,(%rax)
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push %rbp
  40022b:	00 00                	add    %al,(%rax)
  40022d:	00 00                	add    %al,(%rax)
  40022f:	00 02                	add    %al,(%rdx)
  400231:	00 00                	add    %al,(%rax)
  400233:	00 06                	add    %al,(%rsi)
  400235:	00 00                	add    %al,(%rax)
  400237:	00 20                	add    %ah,(%rax)
  400239:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

000000000040023c <.note.gnu.build-id>:
  40023c:	04 00                	add    $0x0,%al
  40023e:	00 00                	add    %al,(%rax)
  400240:	14 00                	adc    $0x0,%al
  400242:	00 00                	add    %al,(%rax)
  400244:	03 00                	add    (%rax),%eax
  400246:	00 00                	add    %al,(%rax)
  400248:	47                   	rex.RXB
  400249:	4e 55                	rex.WRX push %rbp
  40024b:	00 3b                	add    %bh,(%rbx)
  40024d:	d8 4d 6b             	fmuls  0x6b(%rbp)
  400250:	fb                   	sti    
  400251:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
  400252:	ad                   	lods   %ds:(%rsi),%eax
  400253:	12 bf 8a 87 cb 1d    	adc    0x1dcb878a(%rdi),%bh
  400259:	82                   	(bad)  
  40025a:	31 a9 53 31 58 73    	xor    %ebp,0x73583153(%rcx)

Disassembly of section .gnu.hash:

0000000000400260 <.gnu.hash>:
  400260:	01 00                	add    %eax,(%rax)
  400262:	00 00                	add    %al,(%rax)
  400264:	01 00                	add    %eax,(%rax)
  400266:	00 00                	add    %al,(%rax)
  400268:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

0000000000400280 <.dynsym>:
	...
  400298:	1a 00                	sbb    (%rax),%al
  40029a:	00 00                	add    %al,(%rax)
  40029c:	12 00                	adc    (%rax),%al
	...
  4002ae:	00 00                	add    %al,(%rax)
  4002b0:	21 00                	and    %eax,(%rax)
  4002b2:	00 00                	add    %al,(%rax)
  4002b4:	12 00                	adc    (%rax),%al
	...
  4002c6:	00 00                	add    %al,(%rax)
  4002c8:	01 00                	add    %eax,(%rax)
  4002ca:	00 00                	add    %al,(%rax)
  4002cc:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

00000000004002e0 <.dynstr>:
  4002e0:	00 5f 5f             	add    %bl,0x5f(%rdi)
  4002e3:	67 6d                	insl   (%dx),%es:(%edi)
  4002e5:	6f                   	outsl  %ds:(%rsi),(%dx)
  4002e6:	6e                   	outsb  %ds:(%rsi),(%dx)
  4002e7:	5f                   	pop    %rdi
  4002e8:	73 74                	jae    40035e <_init-0x32>
  4002ea:	61                   	(bad)  
  4002eb:	72 74                	jb     400361 <_init-0x2f>
  4002ed:	5f                   	pop    %rdi
  4002ee:	5f                   	pop    %rdi
  4002ef:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  4002f3:	63 2e                	movslq (%rsi),%ebp
  4002f5:	73 6f                	jae    400366 <_init-0x2a>
  4002f7:	2e 36 00 70 72       	cs add %dh,%cs:%ss:0x72(%rax)
  4002fc:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  400303:	6c                   	insb   (%dx),%es:(%rdi)
  400304:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  40030b:	72 74                	jb     400381 <_init-0xf>
  40030d:	5f                   	pop    %rdi
  40030e:	6d                   	insl   (%dx),%es:(%rdi)
  40030f:	61                   	(bad)  
  400310:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
  400317:	43 5f                	rex.XB pop %r15
  400319:	32 2e                	xor    (%rsi),%ch
  40031b:	32 2e                	xor    (%rsi),%ch
  40031d:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400320 <.gnu.version>:
  400320:	00 00                	add    %al,(%rax)
  400322:	02 00                	add    (%rax),%al
  400324:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400328 <.gnu.version_r>:
  400328:	01 00                	add    %eax,(%rax)
  40032a:	01 00                	add    %eax,(%rax)
  40032c:	10 00                	adc    %al,(%rax)
  40032e:	00 00                	add    %al,(%rax)
  400330:	10 00                	adc    %al,(%rax)
  400332:	00 00                	add    %al,(%rax)
  400334:	00 00                	add    %al,(%rax)
  400336:	00 00                	add    %al,(%rax)
  400338:	75 1a                	jne    400354 <_init-0x3c>
  40033a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400340:	33 00                	xor    (%rax),%eax
  400342:	00 00                	add    %al,(%rax)
  400344:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400348 <.rela.dyn>:
  400348:	48 0a 60 00          	rex.W or 0x0(%rax),%spl
  40034c:	00 00                	add    %al,(%rax)
  40034e:	00 00                	add    %al,(%rax)
  400350:	06                   	(bad)  
  400351:	00 00                	add    %al,(%rax)
  400353:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

0000000000400360 <.rela.plt>:
  400360:	68 0a 60 00 00       	pushq  $0x600a
  400365:	00 00                	add    %al,(%rax)
  400367:	00 07                	add    %al,(%rdi)
  400369:	00 00                	add    %al,(%rax)
  40036b:	00 01                	add    %al,(%rcx)
	...
  400375:	00 00                	add    %al,(%rax)
  400377:	00 70 0a             	add    %dh,0xa(%rax)
  40037a:	60                   	(bad)  
  40037b:	00 00                	add    %al,(%rax)
  40037d:	00 00                	add    %al,(%rax)
  40037f:	00 07                	add    %al,(%rdi)
  400381:	00 00                	add    %al,(%rax)
  400383:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000400390 <_init>:
  400390:	48 83 ec 08          	sub    $0x8,%rsp
  400394:	e8 73 00 00 00       	callq  40040c <call_gmon_start>
  400399:	e8 02 01 00 00       	callq  4004a0 <frame_dummy>
  40039e:	e8 1d 03 00 00       	callq  4006c0 <__do_global_ctors_aux>
  4003a3:	48 83 c4 08          	add    $0x8,%rsp
  4003a7:	c3                   	retq   

Disassembly of section .plt:

00000000004003b0 <printf@plt-0x10>:
  4003b0:	ff 35 a2 06 20 00    	pushq  0x2006a2(%rip)        # 600a58 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003b6:	ff 25 a4 06 20 00    	jmpq   *0x2006a4(%rip)        # 600a60 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003c0 <printf@plt>:
  4003c0:	ff 25 a2 06 20 00    	jmpq   *0x2006a2(%rip)        # 600a68 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003c6:	68 00 00 00 00       	pushq  $0x0
  4003cb:	e9 e0 ff ff ff       	jmpq   4003b0 <_init+0x20>

00000000004003d0 <__libc_start_main@plt>:
  4003d0:	ff 25 9a 06 20 00    	jmpq   *0x20069a(%rip)        # 600a70 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003d6:	68 01 00 00 00       	pushq  $0x1
  4003db:	e9 d0 ff ff ff       	jmpq   4003b0 <_init+0x20>

Disassembly of section .text:

00000000004003e0 <_start>:
  4003e0:	31 ed                	xor    %ebp,%ebp
  4003e2:	49 89 d1             	mov    %rdx,%r9
  4003e5:	5e                   	pop    %rsi
  4003e6:	48 89 e2             	mov    %rsp,%rdx
  4003e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4003ed:	50                   	push   %rax
  4003ee:	54                   	push   %rsp
  4003ef:	49 c7 c0 b0 06 40 00 	mov    $0x4006b0,%r8
  4003f6:	48 c7 c1 20 06 40 00 	mov    $0x400620,%rcx
  4003fd:	48 c7 c7 c4 04 40 00 	mov    $0x4004c4,%rdi
  400404:	e8 c7 ff ff ff       	callq  4003d0 <__libc_start_main@plt>
  400409:	f4                   	hlt    
  40040a:	90                   	nop
  40040b:	90                   	nop

000000000040040c <call_gmon_start>:
  40040c:	48 83 ec 08          	sub    $0x8,%rsp
  400410:	48 8b 05 31 06 20 00 	mov    0x200631(%rip),%rax        # 600a48 <_DYNAMIC+0x190>
  400417:	48 85 c0             	test   %rax,%rax
  40041a:	74 02                	je     40041e <call_gmon_start+0x12>
  40041c:	ff d0                	callq  *%rax
  40041e:	48 83 c4 08          	add    $0x8,%rsp
  400422:	c3                   	retq   
  400423:	90                   	nop
  400424:	90                   	nop
  400425:	90                   	nop
  400426:	90                   	nop
  400427:	90                   	nop
  400428:	90                   	nop
  400429:	90                   	nop
  40042a:	90                   	nop
  40042b:	90                   	nop
  40042c:	90                   	nop
  40042d:	90                   	nop
  40042e:	90                   	nop
  40042f:	90                   	nop

0000000000400430 <__do_global_dtors_aux>:
  400430:	55                   	push   %rbp
  400431:	48 89 e5             	mov    %rsp,%rbp
  400434:	53                   	push   %rbx
  400435:	48 83 ec 08          	sub    $0x8,%rsp
  400439:	80 3d 40 06 20 00 00 	cmpb   $0x0,0x200640(%rip)        # 600a80 <completed.5895>
  400440:	75 4b                	jne    40048d <__do_global_dtors_aux+0x5d>
  400442:	bb a8 08 60 00       	mov    $0x6008a8,%ebx
  400447:	48 8b 05 3a 06 20 00 	mov    0x20063a(%rip),%rax        # 600a88 <dtor_idx.5897>
  40044e:	48 81 eb a0 08 60 00 	sub    $0x6008a0,%rbx
  400455:	48 c1 fb 03          	sar    $0x3,%rbx
  400459:	48 83 eb 01          	sub    $0x1,%rbx
  40045d:	48 39 d8             	cmp    %rbx,%rax
  400460:	73 24                	jae    400486 <__do_global_dtors_aux+0x56>
  400462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400468:	48 83 c0 01          	add    $0x1,%rax
  40046c:	48 89 05 15 06 20 00 	mov    %rax,0x200615(%rip)        # 600a88 <dtor_idx.5897>
  400473:	ff 14 c5 a0 08 60 00 	callq  *0x6008a0(,%rax,8)
  40047a:	48 8b 05 07 06 20 00 	mov    0x200607(%rip),%rax        # 600a88 <dtor_idx.5897>
  400481:	48 39 d8             	cmp    %rbx,%rax
  400484:	72 e2                	jb     400468 <__do_global_dtors_aux+0x38>
  400486:	c6 05 f3 05 20 00 01 	movb   $0x1,0x2005f3(%rip)        # 600a80 <completed.5895>
  40048d:	48 83 c4 08          	add    $0x8,%rsp
  400491:	5b                   	pop    %rbx
  400492:	5d                   	pop    %rbp
  400493:	c3                   	retq   
  400494:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  40049b:	00 00 00 00 00 

00000000004004a0 <frame_dummy>:
  4004a0:	48 83 3d 08 04 20 00 	cmpq   $0x0,0x200408(%rip)        # 6008b0 <__JCR_END__>
  4004a7:	00 
  4004a8:	55                   	push   %rbp
  4004a9:	48 89 e5             	mov    %rsp,%rbp
  4004ac:	74 12                	je     4004c0 <frame_dummy+0x20>
  4004ae:	b8 00 00 00 00       	mov    $0x0,%eax
  4004b3:	48 85 c0             	test   %rax,%rax
  4004b6:	74 08                	je     4004c0 <frame_dummy+0x20>
  4004b8:	5d                   	pop    %rbp
  4004b9:	bf b0 08 60 00       	mov    $0x6008b0,%edi
  4004be:	ff e0                	jmpq   *%rax
  4004c0:	5d                   	pop    %rbp
  4004c1:	c3                   	retq   
  4004c2:	90                   	nop
  4004c3:	90                   	nop

00000000004004c4 <main>:
  4004c4:	55                   	push   %rbp
  4004c5:	48 89 e5             	mov    %rsp,%rbp
  4004c8:	41 56                	push   %r14
  4004ca:	41 55                	push   %r13
  4004cc:	41 54                	push   %r12
  4004ce:	53                   	push   %rbx
  4004cf:	48 83 ec 50          	sub    $0x50,%rsp
  4004d3:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4004d6:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4004da:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
  4004e1:	00 
  4004e2:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  4004e9:	c6 45 bc 00          	movb   $0x0,-0x44(%rbp)
  4004ed:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  4004f4:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4004f7:	89 45 a8             	mov    %eax,-0x58(%rbp)
  4004fa:	8b 45 a8             	mov    -0x58(%rbp),%eax
  4004fd:	0f a2                	cpuid  
  4004ff:	41 89 d4             	mov    %edx,%r12d
  400502:	41 89 cd             	mov    %ecx,%r13d
  400505:	41 89 c6             	mov    %eax,%r14d
  400508:	44 89 75 d8          	mov    %r14d,-0x28(%rbp)
  40050c:	89 5d d4             	mov    %ebx,-0x2c(%rbp)
  40050f:	44 89 6d d0          	mov    %r13d,-0x30(%rbp)
  400513:	44 89 65 cc          	mov    %r12d,-0x34(%rbp)
  400517:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40051b:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40051e:	89 10                	mov    %edx,(%rax)
  400520:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  400524:	48 8d 50 04          	lea    0x4(%rax),%rdx
  400528:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40052b:	89 02                	mov    %eax,(%rdx)
  40052d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  400531:	48 8d 50 08          	lea    0x8(%rax),%rdx
  400535:	8b 45 d0             	mov    -0x30(%rbp),%eax
  400538:	89 02                	mov    %eax,(%rdx)
  40053a:	b8 18 07 40 00       	mov    $0x400718,%eax
  40053f:	8b 55 d8             	mov    -0x28(%rbp),%edx
  400542:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  400546:	48 89 ce             	mov    %rcx,%rsi
  400549:	48 89 c7             	mov    %rax,%rdi
  40054c:	b8 00 00 00 00       	mov    $0x0,%eax
  400551:	e8 6a fe ff ff       	callq  4003c0 <printf@plt>
  400556:	8b 45 d8             	mov    -0x28(%rbp),%eax
  400559:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40055c:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  400563:	8b 45 dc             	mov    -0x24(%rbp),%eax
  400566:	89 45 a8             	mov    %eax,-0x58(%rbp)
  400569:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40056c:	0f a2                	cpuid  
  40056e:	41 89 d4             	mov    %edx,%r12d
  400571:	41 89 cd             	mov    %ecx,%r13d
  400574:	41 89 c6             	mov    %eax,%r14d
  400577:	44 89 75 d8          	mov    %r14d,-0x28(%rbp)
  40057b:	89 5d d4             	mov    %ebx,-0x2c(%rbp)
  40057e:	44 89 6d d0          	mov    %r13d,-0x30(%rbp)
  400582:	44 89 65 cc          	mov    %r12d,-0x34(%rbp)
  400586:	b8 30 07 40 00       	mov    $0x400730,%eax
  40058b:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
  40058f:	8b 7d d0             	mov    -0x30(%rbp),%edi
  400592:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  400595:	8b 55 d8             	mov    -0x28(%rbp),%edx
  400598:	8b 75 dc             	mov    -0x24(%rbp),%esi
  40059b:	45 89 c1             	mov    %r8d,%r9d
  40059e:	41 89 f8             	mov    %edi,%r8d
  4005a1:	48 89 c7             	mov    %rax,%rdi
  4005a4:	b8 00 00 00 00       	mov    $0x0,%eax
  4005a9:	e8 12 fe ff ff       	callq  4003c0 <printf@plt>
  4005ae:	83 7d c8 06          	cmpl   $0x6,-0x38(%rbp)
  4005b2:	76 5f                	jbe    400613 <main+0x14f>
  4005b4:	c7 45 dc 07 00 00 00 	movl   $0x7,-0x24(%rbp)
  4005bb:	8b 45 dc             	mov    -0x24(%rbp),%eax
  4005be:	89 45 a8             	mov    %eax,-0x58(%rbp)
  4005c1:	8b 45 a8             	mov    -0x58(%rbp),%eax
  4005c4:	48 31 c9             	xor    %rcx,%rcx
  4005c7:	0f a2                	cpuid  
  4005c9:	41 89 d4             	mov    %edx,%r12d
  4005cc:	41 89 cd             	mov    %ecx,%r13d
  4005cf:	41 89 c6             	mov    %eax,%r14d
  4005d2:	44 89 75 d8          	mov    %r14d,-0x28(%rbp)
  4005d6:	89 5d d4             	mov    %ebx,-0x2c(%rbp)
  4005d9:	44 89 6d d0          	mov    %r13d,-0x30(%rbp)
  4005dd:	44 89 65 cc          	mov    %r12d,-0x34(%rbp)
  4005e1:	b8 70 07 40 00       	mov    $0x400770,%eax
  4005e6:	44 8b 45 d0          	mov    -0x30(%rbp),%r8d
  4005ea:	8b 7d d4             	mov    -0x2c(%rbp),%edi
  4005ed:	8b 55 d8             	mov    -0x28(%rbp),%edx
  4005f0:	8b 75 dc             	mov    -0x24(%rbp),%esi
  4005f3:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  4005f6:	89 0c 24             	mov    %ecx,(%rsp)
  4005f9:	45 89 c1             	mov    %r8d,%r9d
  4005fc:	41 89 f8             	mov    %edi,%r8d
  4005ff:	89 d1                	mov    %edx,%ecx
  400601:	ba 00 00 00 00       	mov    $0x0,%edx
  400606:	48 89 c7             	mov    %rax,%rdi
  400609:	b8 00 00 00 00       	mov    $0x0,%eax
  40060e:	e8 ad fd ff ff       	callq  4003c0 <printf@plt>
  400613:	48 83 c4 50          	add    $0x50,%rsp
  400617:	5b                   	pop    %rbx
  400618:	41 5c                	pop    %r12
  40061a:	41 5d                	pop    %r13
  40061c:	41 5e                	pop    %r14
  40061e:	5d                   	pop    %rbp
  40061f:	c3                   	retq   

0000000000400620 <__libc_csu_init>:
  400620:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400625:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40062a:	48 8d 2d 5b 02 20 00 	lea    0x20025b(%rip),%rbp        # 60088c <__init_array_end>
  400631:	4c 8d 25 54 02 20 00 	lea    0x200254(%rip),%r12        # 60088c <__init_array_end>
  400638:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40063d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  400642:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  400647:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  40064c:	48 83 ec 38          	sub    $0x38,%rsp
  400650:	4c 29 e5             	sub    %r12,%rbp
  400653:	41 89 fd             	mov    %edi,%r13d
  400656:	49 89 f6             	mov    %rsi,%r14
  400659:	48 c1 fd 03          	sar    $0x3,%rbp
  40065d:	49 89 d7             	mov    %rdx,%r15
  400660:	e8 2b fd ff ff       	callq  400390 <_init>
  400665:	48 85 ed             	test   %rbp,%rbp
  400668:	74 1c                	je     400686 <__libc_csu_init+0x66>
  40066a:	31 db                	xor    %ebx,%ebx
  40066c:	0f 1f 40 00          	nopl   0x0(%rax)
  400670:	4c 89 fa             	mov    %r15,%rdx
  400673:	4c 89 f6             	mov    %r14,%rsi
  400676:	44 89 ef             	mov    %r13d,%edi
  400679:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40067d:	48 83 c3 01          	add    $0x1,%rbx
  400681:	48 39 eb             	cmp    %rbp,%rbx
  400684:	75 ea                	jne    400670 <__libc_csu_init+0x50>
  400686:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40068b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400690:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400695:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40069a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40069f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  4006a4:	48 83 c4 38          	add    $0x38,%rsp
  4006a8:	c3                   	retq   
  4006a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004006b0 <__libc_csu_fini>:
  4006b0:	f3 c3                	repz retq 
  4006b2:	90                   	nop
  4006b3:	90                   	nop
  4006b4:	90                   	nop
  4006b5:	90                   	nop
  4006b6:	90                   	nop
  4006b7:	90                   	nop
  4006b8:	90                   	nop
  4006b9:	90                   	nop
  4006ba:	90                   	nop
  4006bb:	90                   	nop
  4006bc:	90                   	nop
  4006bd:	90                   	nop
  4006be:	90                   	nop
  4006bf:	90                   	nop

00000000004006c0 <__do_global_ctors_aux>:
  4006c0:	55                   	push   %rbp
  4006c1:	48 89 e5             	mov    %rsp,%rbp
  4006c4:	53                   	push   %rbx
  4006c5:	48 83 ec 08          	sub    $0x8,%rsp
  4006c9:	48 8b 05 c0 01 20 00 	mov    0x2001c0(%rip),%rax        # 600890 <__CTOR_LIST__>
  4006d0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4006d4:	74 19                	je     4006ef <__do_global_ctors_aux+0x2f>
  4006d6:	bb 90 08 60 00       	mov    $0x600890,%ebx
  4006db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4006e0:	48 83 eb 08          	sub    $0x8,%rbx
  4006e4:	ff d0                	callq  *%rax
  4006e6:	48 8b 03             	mov    (%rbx),%rax
  4006e9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4006ed:	75 f1                	jne    4006e0 <__do_global_ctors_aux+0x20>
  4006ef:	48 83 c4 08          	add    $0x8,%rsp
  4006f3:	5b                   	pop    %rbx
  4006f4:	5d                   	pop    %rbp
  4006f5:	c3                   	retq   
  4006f6:	90                   	nop
  4006f7:	90                   	nop

Disassembly of section .fini:

00000000004006f8 <_fini>:
  4006f8:	48 83 ec 08          	sub    $0x8,%rsp
  4006fc:	e8 2f fd ff ff       	callq  400430 <__do_global_dtors_aux>
  400701:	48 83 c4 08          	add    $0x8,%rsp
  400705:	c3                   	retq   

Disassembly of section .rodata:

0000000000400708 <_IO_stdin_used>:
  400708:	01 00                	add    %eax,(%rax)
  40070a:	02 00                	add    (%rax),%al
  40070c:	00 00                	add    %al,(%rax)
	...

0000000000400710 <__dso_handle>:
	...
  400718:	6e                   	outsb  %ds:(%rsi),(%dx)
  400719:	61                   	(bad)  
  40071a:	6d                   	insl   (%dx),%es:(%rdi)
  40071b:	65 20 3d 20 25 73 20 	and    %bh,%gs:0x20732520(%rip)        # 20b32c42 <_end+0x205321b2>
  400722:	65                   	gs
  400723:	61                   	(bad)  
  400724:	78 20                	js     400746 <__dso_handle+0x36>
  400726:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  40072b:	78 0a                	js     400737 <__dso_handle+0x27>
  40072d:	00 00                	add    %al,(%rax)
  40072f:	00 63 70             	add    %ah,0x70(%rbx)
  400732:	75 69                	jne    40079d <__dso_handle+0x8d>
  400734:	64 20 25 75 20 65 61 	and    %ah,%fs:0x61652075(%rip)        # 61a527b0 <_end+0x61451d20>
  40073b:	78 20                	js     40075d <__dso_handle+0x4d>
  40073d:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  400742:	78 2c                	js     400770 <__dso_handle+0x60>
  400744:	20 65 62             	and    %ah,0x62(%rbp)
  400747:	78 20                	js     400769 <__dso_handle+0x59>
  400749:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  40074e:	78 2c                	js     40077c <__dso_handle+0x6c>
  400750:	20 65 63             	and    %ah,0x63(%rbp)
  400753:	78 20                	js     400775 <__dso_handle+0x65>
  400755:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  40075a:	78 2c                	js     400788 <__dso_handle+0x78>
  40075c:	20 65 64             	and    %ah,0x64(%rbp)
  40075f:	78 20                	js     400781 <__dso_handle+0x71>
  400761:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  400766:	78 0a                	js     400772 <__dso_handle+0x62>
	...
  400770:	63 70 75             	movslq 0x75(%rax),%esi
  400773:	69 64 20 25 75 20 2f 	imul   $0x202f2075,0x25(%rax,%riz,1),%esp
  40077a:	20 
  40077b:	25 75 20 65 61       	and    $0x61652075,%eax
  400780:	78 20                	js     4007a2 <__dso_handle+0x92>
  400782:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  400787:	78 2c                	js     4007b5 <__dso_handle+0xa5>
  400789:	20 65 62             	and    %ah,0x62(%rbp)
  40078c:	78 20                	js     4007ae <__dso_handle+0x9e>
  40078e:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  400793:	78 2c                	js     4007c1 <__dso_handle+0xb1>
  400795:	20 65 63             	and    %ah,0x63(%rbp)
  400798:	78 20                	js     4007ba <__dso_handle+0xaa>
  40079a:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  40079f:	78 2c                	js     4007cd <__dso_handle+0xbd>
  4007a1:	20 65 64             	and    %ah,0x64(%rbp)
  4007a4:	78 20                	js     4007c6 <__dso_handle+0xb6>
  4007a6:	3d 20 25 30 38       	cmp    $0x38302520,%eax
  4007ab:	78 0a                	js     4007b7 <__dso_handle+0xa7>
	...

Disassembly of section .eh_frame_hdr:

00000000004007b0 <.eh_frame_hdr>:
  4007b0:	01 1b                	add    %ebx,(%rbx)
  4007b2:	03 3b                	add    (%rbx),%edi
  4007b4:	2c 00                	sub    $0x0,%al
  4007b6:	00 00                	add    %al,(%rax)
  4007b8:	04 00                	add    $0x0,%al
  4007ba:	00 00                	add    %al,(%rax)
  4007bc:	00 fc                	add    %bh,%ah
  4007be:	ff                   	(bad)  
  4007bf:	ff 48 00             	decl   0x0(%rax)
  4007c2:	00 00                	add    %al,(%rax)
  4007c4:	14 fd                	adc    $0xfd,%al
  4007c6:	ff                   	(bad)  
  4007c7:	ff 70 00             	pushq  0x0(%rax)
  4007ca:	00 00                	add    %al,(%rax)
  4007cc:	70 fe                	jo     4007cc <__dso_handle+0xbc>
  4007ce:	ff                   	(bad)  
  4007cf:	ff 98 00 00 00 00    	lcallq *0x0(%rax)
  4007d5:	ff                   	(bad)  
  4007d6:	ff                   	(bad)  
  4007d7:	ff c0                	inc    %eax
  4007d9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

00000000004007e0 <__FRAME_END__-0xa8>:
  4007e0:	14 00                	adc    $0x0,%al
  4007e2:	00 00                	add    %al,(%rax)
  4007e4:	00 00                	add    %al,(%rax)
  4007e6:	00 00                	add    %al,(%rax)
  4007e8:	01 7a 52             	add    %edi,0x52(%rdx)
  4007eb:	00 01                	add    %al,(%rcx)
  4007ed:	78 10                	js     4007ff <__dso_handle+0xef>
  4007ef:	01 1b                	add    %ebx,(%rbx)
  4007f1:	0c 07                	or     $0x7,%al
  4007f3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  4007f9:	00 00                	add    %al,(%rax)
  4007fb:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007fe:	00 00                	add    %al,(%rax)
  400800:	b0 fb                	mov    $0xfb,%al
  400802:	ff                   	(bad)  
  400803:	ff 30                	pushq  (%rax)
  400805:	00 00                	add    %al,(%rax)
  400807:	00 00                	add    %al,(%rax)
  400809:	0e                   	(bad)  
  40080a:	10 46 0e             	adc    %al,0xe(%rsi)
  40080d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  400810:	0b 77 08             	or     0x8(%rdi),%esi
  400813:	80 00 3f             	addb   $0x3f,(%rax)
  400816:	1a 3b                	sbb    (%rbx),%bh
  400818:	2a 33                	sub    (%rbx),%dh
  40081a:	24 22                	and    $0x22,%al
  40081c:	00 00                	add    %al,(%rax)
  40081e:	00 00                	add    %al,(%rax)
  400820:	24 00                	and    $0x0,%al
  400822:	00 00                	add    %al,(%rax)
  400824:	44 00 00             	add    %r8b,(%rax)
  400827:	00 9c fc ff ff 5c 01 	add    %bl,0x15cffff(%rsp,%rdi,8)
  40082e:	00 00                	add    %al,(%rax)
  400830:	00 41 0e             	add    %al,0xe(%rcx)
  400833:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400839:	75 83                	jne    4007be <__dso_handle+0xae>
  40083b:	06                   	(bad)  
  40083c:	8c 05 8d 04 8e 03    	mov    %es,0x38e048d(%rip)        # 3ce0ccf <_end+0x36e023f>
  400842:	03 22                	add    (%rdx),%esp
  400844:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
  400847:	08 24 00             	or     %ah,(%rax,%rax,1)
  40084a:	00 00                	add    %al,(%rax)
  40084c:	6c                   	insb   (%dx),%es:(%rdi)
  40084d:	00 00                	add    %al,(%rax)
  40084f:	00 d0                	add    %dl,%al
  400851:	fd                   	std    
  400852:	ff                   	(bad)  
  400853:	ff 89 00 00 00 00    	decl   0x0(%rcx)
  400859:	51                   	push   %rcx
  40085a:	8c 05 86 06 5f 0e    	mov    %es,0xe5f0686(%rip)        # e9f0ee6 <_end+0xe3f0456>
  400860:	40 83 07 8f          	rex addl $0xffffff8f,(%rdi)
  400864:	02 8e 03 8d 04 02    	add    0x2048d03(%rsi),%cl
  40086a:	58                   	pop    %rax
  40086b:	0e                   	(bad)  
  40086c:	08 00                	or     %al,(%rax)
  40086e:	00 00                	add    %al,(%rax)
  400870:	14 00                	adc    $0x0,%al
  400872:	00 00                	add    %al,(%rax)
  400874:	94                   	xchg   %eax,%esp
  400875:	00 00                	add    %al,(%rax)
  400877:	00 38                	add    %bh,(%rax)
  400879:	fe                   	(bad)  
  40087a:	ff                   	(bad)  
  40087b:	ff 02                	incl   (%rdx)
	...

0000000000400888 <__FRAME_END__>:
  400888:	00 00                	add    %al,(%rax)
	...

Disassembly of section .ctors:

0000000000600890 <__CTOR_LIST__>:
  600890:	ff                   	(bad)  
  600891:	ff                   	(bad)  
  600892:	ff                   	(bad)  
  600893:	ff                   	(bad)  
  600894:	ff                   	(bad)  
  600895:	ff                   	(bad)  
  600896:	ff                   	(bad)  
  600897:	ff 00                	incl   (%rax)

0000000000600898 <__CTOR_END__>:
	...

Disassembly of section .dtors:

00000000006008a0 <__DTOR_LIST__>:
  6008a0:	ff                   	(bad)  
  6008a1:	ff                   	(bad)  
  6008a2:	ff                   	(bad)  
  6008a3:	ff                   	(bad)  
  6008a4:	ff                   	(bad)  
  6008a5:	ff                   	(bad)  
  6008a6:	ff                   	(bad)  
  6008a7:	ff 00                	incl   (%rax)

00000000006008a8 <__DTOR_END__>:
	...

Disassembly of section .jcr:

00000000006008b0 <__JCR_END__>:
	...

Disassembly of section .dynamic:

00000000006008b8 <_DYNAMIC>:
  6008b8:	01 00                	add    %eax,(%rax)
  6008ba:	00 00                	add    %al,(%rax)
  6008bc:	00 00                	add    %al,(%rax)
  6008be:	00 00                	add    %al,(%rax)
  6008c0:	10 00                	adc    %al,(%rax)
  6008c2:	00 00                	add    %al,(%rax)
  6008c4:	00 00                	add    %al,(%rax)
  6008c6:	00 00                	add    %al,(%rax)
  6008c8:	0c 00                	or     $0x0,%al
  6008ca:	00 00                	add    %al,(%rax)
  6008cc:	00 00                	add    %al,(%rax)
  6008ce:	00 00                	add    %al,(%rax)
  6008d0:	90                   	nop
  6008d1:	03 40 00             	add    0x0(%rax),%eax
  6008d4:	00 00                	add    %al,(%rax)
  6008d6:	00 00                	add    %al,(%rax)
  6008d8:	0d 00 00 00 00       	or     $0x0,%eax
  6008dd:	00 00                	add    %al,(%rax)
  6008df:	00 f8                	add    %bh,%al
  6008e1:	06                   	(bad)  
  6008e2:	40 00 00             	add    %al,(%rax)
  6008e5:	00 00                	add    %al,(%rax)
  6008e7:	00 f5                	add    %dh,%ch
  6008e9:	fe                   	(bad)  
  6008ea:	ff 6f 00             	ljmpq  *0x0(%rdi)
  6008ed:	00 00                	add    %al,(%rax)
  6008ef:	00 60 02             	add    %ah,0x2(%rax)
  6008f2:	40 00 00             	add    %al,(%rax)
  6008f5:	00 00                	add    %al,(%rax)
  6008f7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6008fd <_DYNAMIC+0x45>
  6008fd:	00 00                	add    %al,(%rax)
  6008ff:	00 e0                	add    %ah,%al
  600901:	02 40 00             	add    0x0(%rax),%al
  600904:	00 00                	add    %al,(%rax)
  600906:	00 00                	add    %al,(%rax)
  600908:	06                   	(bad)  
  600909:	00 00                	add    %al,(%rax)
  60090b:	00 00                	add    %al,(%rax)
  60090d:	00 00                	add    %al,(%rax)
  60090f:	00 80 02 40 00 00    	add    %al,0x4002(%rax)
  600915:	00 00                	add    %al,(%rax)
  600917:	00 0a                	add    %cl,(%rdx)
  600919:	00 00                	add    %al,(%rax)
  60091b:	00 00                	add    %al,(%rax)
  60091d:	00 00                	add    %al,(%rax)
  60091f:	00 3f                	add    %bh,(%rdi)
  600921:	00 00                	add    %al,(%rax)
  600923:	00 00                	add    %al,(%rax)
  600925:	00 00                	add    %al,(%rax)
  600927:	00 0b                	add    %cl,(%rbx)
  600929:	00 00                	add    %al,(%rax)
  60092b:	00 00                	add    %al,(%rax)
  60092d:	00 00                	add    %al,(%rax)
  60092f:	00 18                	add    %bl,(%rax)
  600931:	00 00                	add    %al,(%rax)
  600933:	00 00                	add    %al,(%rax)
  600935:	00 00                	add    %al,(%rax)
  600937:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 60093d <_DYNAMIC+0x85>
	...
  600945:	00 00                	add    %al,(%rax)
  600947:	00 03                	add    %al,(%rbx)
  600949:	00 00                	add    %al,(%rax)
  60094b:	00 00                	add    %al,(%rax)
  60094d:	00 00                	add    %al,(%rax)
  60094f:	00 50 0a             	add    %dl,0xa(%rax)
  600952:	60                   	(bad)  
  600953:	00 00                	add    %al,(%rax)
  600955:	00 00                	add    %al,(%rax)
  600957:	00 02                	add    %al,(%rdx)
  600959:	00 00                	add    %al,(%rax)
  60095b:	00 00                	add    %al,(%rax)
  60095d:	00 00                	add    %al,(%rax)
  60095f:	00 30                	add    %dh,(%rax)
  600961:	00 00                	add    %al,(%rax)
  600963:	00 00                	add    %al,(%rax)
  600965:	00 00                	add    %al,(%rax)
  600967:	00 14 00             	add    %dl,(%rax,%rax,1)
  60096a:	00 00                	add    %al,(%rax)
  60096c:	00 00                	add    %al,(%rax)
  60096e:	00 00                	add    %al,(%rax)
  600970:	07                   	(bad)  
  600971:	00 00                	add    %al,(%rax)
  600973:	00 00                	add    %al,(%rax)
  600975:	00 00                	add    %al,(%rax)
  600977:	00 17                	add    %dl,(%rdi)
  600979:	00 00                	add    %al,(%rax)
  60097b:	00 00                	add    %al,(%rax)
  60097d:	00 00                	add    %al,(%rax)
  60097f:	00 60 03             	add    %ah,0x3(%rax)
  600982:	40 00 00             	add    %al,(%rax)
  600985:	00 00                	add    %al,(%rax)
  600987:	00 07                	add    %al,(%rdi)
  600989:	00 00                	add    %al,(%rax)
  60098b:	00 00                	add    %al,(%rax)
  60098d:	00 00                	add    %al,(%rax)
  60098f:	00 48 03             	add    %cl,0x3(%rax)
  600992:	40 00 00             	add    %al,(%rax)
  600995:	00 00                	add    %al,(%rax)
  600997:	00 08                	add    %cl,(%rax)
  600999:	00 00                	add    %al,(%rax)
  60099b:	00 00                	add    %al,(%rax)
  60099d:	00 00                	add    %al,(%rax)
  60099f:	00 18                	add    %bl,(%rax)
  6009a1:	00 00                	add    %al,(%rax)
  6009a3:	00 00                	add    %al,(%rax)
  6009a5:	00 00                	add    %al,(%rax)
  6009a7:	00 09                	add    %cl,(%rcx)
  6009a9:	00 00                	add    %al,(%rax)
  6009ab:	00 00                	add    %al,(%rax)
  6009ad:	00 00                	add    %al,(%rax)
  6009af:	00 18                	add    %bl,(%rax)
  6009b1:	00 00                	add    %al,(%rax)
  6009b3:	00 00                	add    %al,(%rax)
  6009b5:	00 00                	add    %al,(%rax)
  6009b7:	00 fe                	add    %bh,%dh
  6009b9:	ff                   	(bad)  
  6009ba:	ff 6f 00             	ljmpq  *0x0(%rdi)
  6009bd:	00 00                	add    %al,(%rax)
  6009bf:	00 28                	add    %ch,(%rax)
  6009c1:	03 40 00             	add    0x0(%rax),%eax
  6009c4:	00 00                	add    %al,(%rax)
  6009c6:	00 00                	add    %al,(%rax)
  6009c8:	ff                   	(bad)  
  6009c9:	ff                   	(bad)  
  6009ca:	ff 6f 00             	ljmpq  *0x0(%rdi)
  6009cd:	00 00                	add    %al,(%rax)
  6009cf:	00 01                	add    %al,(%rcx)
  6009d1:	00 00                	add    %al,(%rax)
  6009d3:	00 00                	add    %al,(%rax)
  6009d5:	00 00                	add    %al,(%rax)
  6009d7:	00 f0                	add    %dh,%al
  6009d9:	ff                   	(bad)  
  6009da:	ff 6f 00             	ljmpq  *0x0(%rdi)
  6009dd:	00 00                	add    %al,(%rax)
  6009df:	00 20                	add    %ah,(%rax)
  6009e1:	03 40 00             	add    0x0(%rax),%eax
	...

Disassembly of section .got:

0000000000600a48 <.got>:
	...

Disassembly of section .got.plt:

0000000000600a50 <_GLOBAL_OFFSET_TABLE_>:
  600a50:	b8 08 60 00 00       	mov    $0x6008,%eax
	...
  600a65:	00 00                	add    %al,(%rax)
  600a67:	00 c6                	add    %al,%dh
  600a69:	03 40 00             	add    0x0(%rax),%eax
  600a6c:	00 00                	add    %al,(%rax)
  600a6e:	00 00                	add    %al,(%rax)
  600a70:	d6                   	(bad)  
  600a71:	03 40 00             	add    0x0(%rax),%eax
  600a74:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000600a78 <__data_start>:
  600a78:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000600a80 <completed.5895>:
	...

0000000000600a88 <dtor_idx.5897>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	34 2e                	xor    $0x2e,%al
   d:	36 2e 33 20          	ss xor %cs:%ss:(%rax),%esp
  11:	32 30                	xor    (%rax),%dh
  13:	31 32                	xor    %esi,(%rdx)
  15:	30 33                	xor    %dh,(%rbx)
  17:	30 36                	xor    %dh,(%rsi)
  19:	20 28                	and    %ch,(%rax)
  1b:	52                   	push   %rdx
  1c:	65 64 20 48 61       	gs and %cl,%fs:%gs:0x61(%rax)
  21:	74 20                	je     43 <_init-0x40034d>
  23:	34 2e                	xor    $0x2e,%al
  25:	36                   	ss
  26:	2e                   	cs
  27:	33                   	.byte 0x33
  28:	2d                   	.byte 0x2d
  29:	32 29                	xor    (%rcx),%ch
	...
